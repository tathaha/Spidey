/*
 * This file is generated by jOOQ.
 */
package dev.mlnr.spidey.jooq.tables.records;


import dev.mlnr.spidey.jooq.tables.MusicHistory;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MusicHistoryRecord extends TableRecordImpl<MusicHistoryRecord> implements Record4<OffsetDateTime, String, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.music_history.entry_time</code>.
     */
    public MusicHistoryRecord setEntryTime(OffsetDateTime value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.music_history.entry_time</code>.
     */
    public OffsetDateTime getEntryTime() {
        return (OffsetDateTime) get(0);
    }

    /**
     * Setter for <code>public.music_history.query</code>.
     */
    public MusicHistoryRecord setQuery(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.music_history.query</code>.
     */
    public String getQuery() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.music_history.user_id</code>.
     */
    public MusicHistoryRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.music_history.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.music_history.type</code>.
     */
    public MusicHistoryRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.music_history.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<OffsetDateTime, String, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<OffsetDateTime, String, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<OffsetDateTime> field1() {
        return MusicHistory.MUSIC_HISTORY.ENTRY_TIME;
    }

    @Override
    public Field<String> field2() {
        return MusicHistory.MUSIC_HISTORY.QUERY;
    }

    @Override
    public Field<Long> field3() {
        return MusicHistory.MUSIC_HISTORY.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return MusicHistory.MUSIC_HISTORY.TYPE;
    }

    @Override
    public OffsetDateTime component1() {
        return getEntryTime();
    }

    @Override
    public String component2() {
        return getQuery();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public OffsetDateTime value1() {
        return getEntryTime();
    }

    @Override
    public String value2() {
        return getQuery();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public MusicHistoryRecord value1(OffsetDateTime value) {
        setEntryTime(value);
        return this;
    }

    @Override
    public MusicHistoryRecord value2(String value) {
        setQuery(value);
        return this;
    }

    @Override
    public MusicHistoryRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public MusicHistoryRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public MusicHistoryRecord values(OffsetDateTime value1, String value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MusicHistoryRecord
     */
    public MusicHistoryRecord() {
        super(MusicHistory.MUSIC_HISTORY);
    }

    /**
     * Create a detached, initialised MusicHistoryRecord
     */
    public MusicHistoryRecord(OffsetDateTime entryTime, String query, Long userId, String type) {
        super(MusicHistory.MUSIC_HISTORY);

        setEntryTime(entryTime);
        setQuery(query);
        setUserId(userId);
        setType(type);
    }
}
